plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.cloud.tools.jib' version '3.4.4'
}

jib {
	from {
		image = 'openjdk:17.0.2-slim' // jdk image
	}
	to {
		image = 'iniyo/mytestauthserver'
		tags = ['latest'] // Groovy 배열 사용
	}
	container { // Jib의 container 블록 명확히 사용
		jvmFlags = ['-Dserver.port=8080'] // Groovy 배열 사용
		ports = ['8080'] // 런타임시 노출하는 포트값
		environment = [ // 환경 변수 설정을 위한 key-value값
						ENV_VAR_NAME: 'value'
		]
	}
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}





dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'jakarta.validation:jakarta.validation-api:3.1.0' // 최신 버전 확인 필요

	// Springdoc OpenAPI (Swagger)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.1'

	//JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
